function get_uuid(){try{return crypto.randomUUID()}catch(e){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){let t=16*Math.random()|0,n="x"==e?t:3&t|8;return n.toString(16)})}}async function onInstall(e){console.info(`Service worker: Install ${cacheName}`),self.skipWaiting()}async function onActivate(e){console.info(`Service worker: Activate ${cacheName}`);const t=await caches.keys();await Promise.all(t.filter(e=>e.startsWith(cacheNamePrefix)&&e!==cacheName).map(e=>caches.delete(e)))}async function onFetch(e){let t=null;if(allowCache(e.request)){const n=await caches.open(cacheName);t=await n.match(e.request)}return t||fetch(e.request)}function allowCache(e){return"GET"===e.method&&"navigate"!==e.mode}self.addEventListener("install",e=>e.waitUntil(onInstall(e))),self.addEventListener("activate",e=>e.waitUntil(onActivate(e))),self.addEventListener("fetch",e=>e.respondWith(onFetch(e)));const currentVersion="localhost"===location.host.substring(0,9)?`${get_uuid()}`:"webui_0.8.4",cacheNamePrefix="offline-cache-",cacheName=`${cacheNamePrefix}${currentVersion}`,offlineAssetsInclude=[/\.wasm/,/\.html/,/\.js$/,/\.json$/,/\.css$/,/\.woff$/,/\.png$/,/\.jpe?g$/,/\.gif$/,/\.ico$/],offlineAssetsExclude=[/^service-worker\.js$/];